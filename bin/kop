#!/usr/bin/env bash
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

BINDIR=$(dirname "$0")
export KOP_HOME=`cd $BINDIR/..;pwd`

DEFAULT_KOP_CONF=$KOP_HOME/conf/kop.conf
DEFAULT_STANDALONE_CONF=$KOP_HOME/conf/kop_standalone.conf
DEFAULT_LOG_CONF=$KOP_HOME/conf/log4j2.yaml

if [ -f "$KOP_HOME/conf/kop_env.sh" ]
then
    . "$KOP_HOME/conf/kop_env.sh"
fi

# Check for the java to use
if [[ -z $JAVA_HOME ]]; then
    JAVA=$(which java)
    if [ $? != 0 ]; then
        echo "Error: JAVA_HOME not set, and no java executable found in $PATH." 1>&2
        exit 1
    fi
else
    JAVA=$JAVA_HOME/bin/java
fi

# exclude tests jar
RELEASE_JAR=`ls $KOP_HOME/kop-*.jar 2> /dev/null | grep -v tests | tail -1`
if [ $? == 0 ]; then
    KOP_JAR=$RELEASE_JAR
fi

# exclude tests jar
BUILT_JAR=`ls $KOP_HOME/target/kop-*.jar 2> /dev/null | grep -v tests | tail -1`
if [ $? != 0 ] && [ ! -e "$KOP_JAR" ]; then
    echo "\nCouldn't find kop jar.";
    echo "Make sure you've run 'mvn package'\n";
    exit 1;
elif [ -e "$BUILT_JAR" ]; then
    KOP_JAR=$BUILT_JAR
fi

kop_help() {
    cat <<EOF
Usage: kop <command>
where command is one of:

    kafka-broker        Run the kop kafka-broker server
    help                This help message

or command is the full name of a class with a defined main() method.

Environment variables:
   KOP_LOG_CONF             Log4j configuration file (default $DEFAULT_LOG_CONF)
   KOP_CONF                 Configuration file for kafka-broker (default: $DEFAULT_KOP_CONF)
   KOP_STANDALONE_CONF      Configuration file for kafka-broker standalone (default: $DEFAULT_STANDALONE_CONF)
   KOP_EXTRA_OPTS           Extra options to be passed to the jvm

These variable can also be set in conf/kop_env.sh
EOF
}

add_maven_deps_to_classpath() {
    MVN="mvn"
    if [ "$MAVEN_HOME" != "" ]; then
        MVN=${MAVEN_HOME}/bin/mvn
    fi

    # Need to generate classpath from maven pom. This is costly so generate it
    # and cache it. Save the file into our target dir so a mvn clean will get
    # clean it up and force us create a new one.
    f="${KOP_HOME}/target/classpath.txt"
    if [ ! -f "${f}" ]
    then
        ${MVN} -f "${KOP_HOME}/pom.xml" dependency:build-classpath -DincludeScope=compile -Dmdep.outputFile="${f}" &> /dev/null
    fi
    KOP_CLASSPATH=${CLASSPATH}:`cat "${f}"`
}

if [ -d "$KOP_HOME/lib" ]; then
    KOP_CLASSPATH=$KOP_CLASSPATH:$KOP_HOME/lib/*
else
    add_maven_deps_to_classpath
fi

# if no args specified, show usage
if [ $# = 0 ]; then
    kop_help;
    exit 1;
fi

# get arguments
COMMAND=$1
shift

if [ -z "$KOP_CONF" ]; then
    KOP_CONF=$DEFAULT_KOP_CONF
fi

if [ -z "$KOP_STANDALONE_CONF" ]; then
    KOP_STANDALONE_CONF=$DEFAULT_STANDALONE_CONF
fi

if [ -z "$KOP_LOG_CONF" ]; then
    KOP_LOG_CONF=$DEFAULT_LOG_CONF
fi

KOP_CLASSPATH="$KOP_JAR:$KOP_CLASSPATH"
KOP_CLASSPATH="$(dirname $KOP_LOG_CONF):$KOP_CLASSPATH"
OPTS="$OPTS -Dlog4j.configurationFile=$(basename $KOP_LOG_CONF)"
OPTS="$OPTS -Djava.net.preferIPv4Stack=true"
OPTS="-cp $KOP_CLASSPATH $OPTS"
OPTS="$OPTS $KOP_EXTRA_OPTS"

#Change to KOP_HOME to support relative paths
cd "$KOP_HOME"
if [ $COMMAND == "kafka-broker" ]; then
    exec $JAVA $OPTS io.streamnative.kop.KafkaStarter --kop-conf $KOP_CONF $@
elif [ $COMMAND == "standalone" ]; then
    exec $JAVA $OPTS io.streamnative.kop.KafkaStandaloneStarter --config $KOP_STANDALONE_CONF $@
elif [ $COMMAND == "help" ]; then
    kop_help;
else
    echo ""
    echo "-- Invalid command '$COMMAND' -- Use '$0 help' to get a list of valid commands"
    echo ""
    exit 1
fi
